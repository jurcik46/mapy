<!DOCTYPE html>
<html lang="cz">
<head>
    <meta charset="ISO-8859-2">
    <script type="text/javascript" src="https://api.mapy.cz/loader.js"></script>
    <script type="text/javascript">Loader.load();</script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<style>
/* #orders{
    display: none;

} */
.order{
    border: 1px solid black;
}
#control{
    margin-bottom: 5;
    height: auto;
}
button{
    height: 50px;
    margin-left: 5;
}

</style>
</head>
<body class="container">
<main>
    <div id="control">
    <a href="/refresh" onclick='resetData()'  class="button"><button>Aktualizovat a vymazat</button> </a>
    <a onclick='saveData()' class="button"><button  >Ulozit</button> </a>
    </div> 
    <div id="m" style="height:650px"></div>
    <div id="orders">
    <% data.forEach(function(row){%>
        <div class="order">
        <span class="status"><%= row.status %></span>
        <span class="objednavka"><%= row.objednavka %></span>
        <span class="ulice"><%= row.ulice %></span>
        <span class="mesto" ><%= row.mesto %></span>
        <span class="psc"><%= row.psc %></span>
        <span class="zeme"><%= row.zeme %></span>
        </div>
      <% }); %>
    </div>
</main>

<script> 

/// int own variable
    var allOrders = [];
   var allMarks = [];

/// init maps       
   var m = new SMap(JAK.gel("m"));
    m.addControl(new SMap.Control.Sync());
    m.addDefaultLayer(SMap.DEF_BASE).enable();
    m.addDefaultControls(); 
    var layer = new SMap.Layer.Marker();
    m.addLayer(layer);
    layer.enable();


/// reset buttons
    function saveData(){
       localStorage.setItem("marks", JSON.stringify(allOrders));
    }

    function resetData(){
        localStorage.removeItem("marks");
    }

    
    /// nepoziva sa toto 
    function changeMarker(markerId, color){
        var allMarks = layer.getMarkers();
        var findeMark = allMarks.find(mark => mark._id == markerId);
        var findOrder = allOrders.find(order => order.label == markerId);
        layer.removeMarker(findeMark, false);
        layer.redraw();
        var cords = SMap.Coords.fromWGS84(findeMark._coords.x, findeMark._coords.y );
        var card = findeMark._card;
        var options = {}
        switch(color){
            case 'purple':
                options.url = `/images/marks/car1.png`
                findOrder.color = "purple"
            break;
            case 'blue':
                options.url = `/images/marks/car2.png`
                findOrder.color = "blue"
                break;
            case 'green': 
                options.url = `/images/marks/car3.png`
                findOrder.color = "green"
                break;
            case 'azure': 
                options.url = `/images/marks/car4.png`
                findOrder.color = "azure"
                break;
            default:
                options.url = `https://api.mapy.cz/img/api/marker/drop-red.png`
                findOrder.color = "default"

        }
        var marker = new SMap.Marker(cords, markerId , options);
        marker.decorate(SMap.Marker.Feature.Card, card);
        layer.addMarker(marker);
        // layer.addMarker(findeMark, true);
        // layer.redraw();
        // layer.clear();
    }

    function removeMark(markerId){
        var allMarks = layer.getMarkers();
        var findeMark = allMarks.find(mark => mark._id == markerId);
        var findOrder = allOrders.filter(function(order) { return order.label == markerId});
        layer.removeMarker(findeMark, true);
    }

    let geocodeCallback =  (order) => (geocoder) => { /* Odpověď */
        if (!geocoder.getResults()[0].results.length) {
            order.result = "failed";
            return;
        }
        order.result = "success";
        
        var vysledky = geocoder.getResults()[0].results;
        var data = [];
        while (vysledky.length) { /* Zobrazit všechny výsledky hledání */
            var item = vysledky.shift()
            // console.log(item.coords.x);
            // console.log(item.coords.y);
            var options = {url: `/images/status/${order.status.replace(/\s/g, '')}.png`}
        
            var card = new SMap.Card();
            card.getHeader().innerHTML = `<strong>${order.objednavka.text()}</strong>`;

            var pomHtmlButton = `<div><button onclick="removeMark('${item.label}')"> Remove Mark </button></div>`
            card.getBody().innerHTML = `${item.label} ${order.psc.text()} ${pomHtmlButton}`;

            order.label = item.label;
            var coords = SMap.Coords.fromWGS84(item.coords.x, item.coords.y);
            var marker = new SMap.Marker(coords, item.label , options);
            marker.decorate(SMap.Marker.Feature.Card, card);
            layer.addMarker(marker);
            // data.push(item.label + " (" + item.coords.toWGS84(2).reverse().join(", ") + ")");
        }
        // console.log(data.join("\n"));
    }

    const initAll = () => {
        allOrders = [];
        $(".order").each(function( index ) {
        // psc:"", ulice:"",mesto:"",objednavka:"",id:""
            let order= {}
            order.html = $(this).html();
            order.psc = $(this).find(".psc")
            order.ulice = $(this).find(".ulice")
            order.mesto = $(this).find(".mesto")
            order.objednavka = $(this).find(".objednavka")
            order.status = $(this).find(".status").text()
            order.id = `${order.psc.text()} ${order.ulice.text()} ${order.mesto.text()}`;
            allOrders.push(order)

            new SMap.Geocoder(order.id, geocodeCallback(order));
    });
    }

    const initAllFromCache = () =>{
        let  mar = JSON.parse(localStorage.getItem("marks"));
        $('#orders').empty();
        mar.forEach(mark => {
            $('#orders').append(`<span class="status"> ${mark.result} <div class="order"> ${mark.html}  </div> </span>`);
            $('.order:last .color').text(mark.status);
        });
   
    }

    let  marks = localStorage.getItem("marks");
   if(!marks){
    initAll();
   }else{
    initAllFromCache();
    initAll()
   }


    </script>
</body>
</html>